;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project : Digital clock and bedside lamp
;Version : v1.0
;Date    : 10/06/2021
;Author  :
;Company : PaModernShop
;Comments:
;
;
;Chip type               : ATmega8A
;Program type            : Application
;AVR Core Clock frequency: 8/000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*******************************************************/
;
;#include <mega8.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;// I2C Bus functions
;#include <i2c.h>
;// DS1307 Real Time Clock functions
;#include <ds1307.h>
;// Declare your global variables here
;#include <delay.h>
;
;void main(void)
; 0000 0021 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0022 // Declare your local variables here
; 0000 0023 unsigned char seg[12]={0xc0,0xf9,0xA4,0xB0,0x99,0x92,0x82,0xf8,0x80 ,0x90,0xff},h,m,s,i,h1,h2,m1,m2;
; 0000 0024 // Input/Output Ports initialization
; 0000 0025 // Port B initialization
; 0000 0026 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0027 DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;	seg -> Y+2
;	h -> R17
;	m -> R16
;	s -> R19
;	i -> R18
;	h1 -> R21
;	h2 -> R20
;	m1 -> Y+1
;	m2 -> Y+0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0028 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 0029 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 002A 
; 0000 002B // Port C initialization
; 0000 002C // Function: Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 002D DDRC=(1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 002E // State: Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 002F PORTC=(0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0030 
; 0000 0031 // Port D initialization
; 0000 0032 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0033 DDRD=(1<<DDD7) | (1<<DDD6) | (1<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0034 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0035 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (1<<PORTD3) | (1<<PORTD2) | (1<<PORTD1) | (1<<PORTD0);
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0036 
; 0000 0037 // Bit-Banged I2C Bus initialization
; 0000 0038 // I2C Port: PORTC
; 0000 0039 // I2C SDA bit: 4
; 0000 003A // I2C SCL bit: 5
; 0000 003B // Bit Rate: 100 kHz
; 0000 003C // Note: I2C settings are specified in the
; 0000 003D // Project|Configure|C Compiler|Libraries|I2C menu.
; 0000 003E i2c_init();
;PCODE: $0000001F VOL: 0
; 0000 003F 
; 0000 0040 // DS1307 Real Time Clock initialization
; 0000 0041 // Square wave output on pin SQW/OUT: On
; 0000 0042 // Square wave frequency: 1Hz
; 0000 0043 
; 0000 0044 rtc_init(0,1,0);
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0045 //rtc_set_time(0,0,0);
; 0000 0046 
; 0000 0047 // Global enable interrupts
; 0000 0048 #asm("sei")
;PCODE: $00000026 VOL: 0
	sei
;PCODE: $00000027 VOL: 0
; 0000 0049 i2c_init();
;PCODE: $00000028 VOL: 0
; 0000 004A rtc_init(0,1,0);
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 004B while (1)
;PCODE: $0000002F VOL: 0
; 0000 004C  {
; 0000 004D   rtc_get_time(&h,&m,&s);
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 004E   h1=h/10;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 004F   h2=h%10;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0050   m1=m/10;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0051   m2=m%10;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0052   if(h1==0)h1=10;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0053 
; 0000 0054   if(PIND.0==0){h++;rtc_set_time(h,m,s);while(PIND.0==0);}
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0055   if(PIND.1==0){m++;rtc_set_time(h,m,s);while(PIND.1==0);}
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 0056   if(PIND.2==0){s=0;rtc_set_time(h,m,s);}
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 0057 
; 0000 0058   delay_us(10);
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 0059 
; 0000 005A   PORTC.0=1;
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 005B   PORTB=seg[h1];
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 005C   delay_us(200);
;PCODE: $00000088 VOL: 0
; 0000 005D   PORTC.0=0;
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 005E 
; 0000 005F   PORTB=seg[10];
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 0060 
; 0000 0061   PORTC.1=1;
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 0062   PORTB=seg[h2];
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 0063   delay_us(200);
;PCODE: $00000095 VOL: 0
; 0000 0064   PORTC.1=0;
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 0065 
; 0000 0066   PORTB=seg[10];
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 0067 
; 0000 0068   PORTC.2=1;
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 0069   PORTB=seg[m1];
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 006A   delay_us(200);
;PCODE: $000000A2 VOL: 0
; 0000 006B   PORTC.2=0;
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 006C 
; 0000 006D   PORTB=seg[10];
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 006E 
; 0000 006F   PORTC.3=1;
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 0070   PORTB=seg[m2];
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 0071   delay_us(200);
;PCODE: $000000AF VOL: 0
; 0000 0072   PORTC.3=0;
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 0073 
; 0000 0074   PORTB=seg[10];
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 0075 
; 0000 0076   if(h>12){h=0;rtc_set_time(h,m,s);}
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0000 0077   if(m>59){m=0;rtc_set_time(h,m,s);}
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
; 0000 0078   if(PIND.3==0)i++;
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 0079   if(i>8)i=0;
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
; 0000 007A   if(i==0)
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
; 0000 007B   {
; 0000 007C    PORTD.5=0;
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0000 007D    PORTD.6=0;
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0000 007E    PORTD.7=0;
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
; 0000 007F    while(PIND.3==0);
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
; 0000 0080   }
; 0000 0081   if(i==1)
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0000 0082   {
; 0000 0083    PORTD.5=1;
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
; 0000 0084    PORTD.6=0;
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0000 0085    PORTD.7=0;
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0000 0086    while(PIND.3==0);
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
; 0000 0087   }
; 0000 0088   if(i==2)
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
; 0000 0089   {
; 0000 008A    PORTD.5=0;
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0000 008B    PORTD.6=1;
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
; 0000 008C    PORTD.7=0;
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
; 0000 008D    while(PIND.3==0);
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
; 0000 008E   }
; 0000 008F   if(i==3)
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0000 0090   {
; 0000 0091    PORTD.5=0;
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
; 0000 0092    PORTD.6=0;
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
; 0000 0093    PORTD.7=1;
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
; 0000 0094    while(PIND.3==0);
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
; 0000 0095   }
; 0000 0096   if(i==4)
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
; 0000 0097   {
; 0000 0098    PORTD.5=1;
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
; 0000 0099    PORTD.6=1;
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 009A    PORTD.7=0;
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
; 0000 009B    while(PIND.3==0);
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
; 0000 009C   }
; 0000 009D   if(i==5)
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
; 0000 009E   {
; 0000 009F    PORTD.5=1;
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
; 0000 00A0    PORTD.6=0;
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
; 0000 00A1    PORTD.7=1;
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
; 0000 00A2    while(PIND.3==0);
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
; 0000 00A3   }
; 0000 00A4   if(i==6)
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
; 0000 00A5   {
; 0000 00A6    PORTD.5=0;
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0000 00A7    PORTD.6=1;
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0000 00A8    PORTD.7=1;
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0000 00A9    while(PIND.3==0);
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
; 0000 00AA   }
; 0000 00AB   if(i==7)
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
; 0000 00AC   {
; 0000 00AD    PORTD.5=1;
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
; 0000 00AE    PORTD.6=1;
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
; 0000 00AF    PORTD.7=1;
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
; 0000 00B0    while(PIND.3==0);
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
; 0000 00B1   }
; 0000 00B2  }
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
; 0000 00B3 }
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
